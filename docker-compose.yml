version: '3.8'

networks:
  readmaster_network:
    driver: bridge

volumes:
  postgres_data:
  postgres_test_data:
  redis_data:

services:
  db:
    image: postgres:15-alpine
    container_name: readmaster_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DATABASE_USER:-user}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-password}
      - POSTGRES_DB=${DATABASE_NAME:-readmaster_db}
    networks:
      - readmaster_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-user} -d ${DATABASE_NAME:-readmaster_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  test_db:
    image: postgres:15-alpine
    container_name: readmaster_test_db
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${TEST_DATABASE_USER:-test_user}
      - POSTGRES_PASSWORD=${TEST_DATABASE_PASSWORD:-test_password}
      - POSTGRES_DB=${TEST_DATABASE_NAME:-readmaster_test_db}
    networks:
      - readmaster_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TEST_DATABASE_USER:-test_user} -d ${TEST_DATABASE_NAME:-readmaster_test_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: readmaster_redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - readmaster_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: readmaster_api
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+asyncpg://${DATABASE_USER:-user}:${DATABASE_PASSWORD:-password}@db:5432/${DATABASE_NAME:-postgres}
      - TEST_DATABASE_URL=postgresql+asyncpg://${TEST_DATABASE_USER:-test_user}:${TEST_DATABASE_PASSWORD:-test_password}@test_db:5432/${TEST_DATABASE_NAME:-readmaster_test_db}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your_jwt_secret}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
    networks:
      - readmaster_network

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: readmaster_worker
    command: celery -A src.core.celery_app.celery_app worker -l info
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+asyncpg://${DATABASE_USER:-user}:${DATABASE_PASSWORD:-password}@db:5432/${DATABASE_NAME:-postgres}
      - TEST_DATABASE_URL=postgresql+asyncpg://${TEST_DATABASE_USER:-test_user}:${TEST_DATABASE_PASSWORD:-test_password}@test_db:5432/${TEST_DATABASE_NAME:-readmaster_test_db}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - readmaster_network
